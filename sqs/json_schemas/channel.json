{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://asyncapi.com/bindings/sqs/channel.json",
  "title": "Channel Schema",
  "description": "This object contains information about the channel representation in SQS.",
  "type": "object",
  "additionalProperties": false,
  "patternProperties": {
    "^x-[\\w\\d\\.\\-\\_]+$": {
      "$ref": "https://raw.githubusercontent.com/asyncapi/spec-json-schemas/v2.14.0/schemas/2.4.0.json#/definitions/specificationExtension"
    }
  },
  "properties": {
    "queue": {
      "description": "A definition of the queue that will be used as the channel.",
      "$ref": "#/definitions/queue"
    },
    "deadLetterQueue": {
      "description": "A definition of the queue that will be used for un-processable messages.",
      "$ref": "#/definitions/queue"
    },
    "bindingVersion": {
      "type": "string",
      "description": "The version of this binding.",
      "default": "latest"
    }
  },
  "required": [
    "queue"
  ],
  "definitions": {
    "queue": {
      "type": "object",
      "description": "A definition of a queue.",
      "properties": {
        "$ref": {
          "type": "string",
          "description": "Allows for an external definition of a queue. The referenced structure MUST be in the format of a Queue. If there are conflicts between the referenced definition and this Queue's definition, the behavior is undefined."
        },
        "name": {
          "type": "string",
          "description": "The name of the queue. When an SNS Operation Binding Object references an SQS queue by name, the identifier should be the one in this field."
        },
        "fifoQueue": {
          "type": "boolean",
          "description": "Is this a FIFO queue?",
          "default": false
        },
        "deliveryDelay": {
          "type": "integer",
          "description": "The number of seconds to delay before a message sent to the queue can be received. used to create a delay queue.",
          "minimum": 0,
          "maximum": 15,
          "default": 0
        },
        "visibilityTimeout": {
          "type": "integer",
          "description": "The length of time, in seconds, that a consumer locks a message - hiding it from reads - before it is unlocked and can be read again.",
          "minimum": 0,
          "maximum": 43200,
          "default": 30
        },
        "receiveMessageWaitTime": {
          "type": "integer",
          "description": "Determines if the queue uses short polling or long polling. Set to zero the queue reads available messages and returns immediately. Set to a non-zero integer, long polling waits the specified number of seconds for messages to arrive before returning.",
          "default": 0
        },
        "messageRetentionPeriod": {
          "type": "integer",
          "description": "How long to retain a message on the queue in seconds, unless deleted.",
          "minimum": 60,
          "maximum": 1209600,
          "default": 345600
        },
        "redrivePolicy": {
          "$ref": "#/definitions/redrivePolicy"
        },
        "policy": {
          "$ref": "#/definitions/policy"
        },
        "tags": {
          "type": "object",
          "description": "Key-value pairs that represent AWS tags on the queue."
        }
      },
      "required": [
        "name"
      ]
    },
    "redrivePolicy": {
      "type": "object",
      "description": "Prevent poison pill messages by moving un-processable messages to an SQS dead letter queue.",
      "properties": {
        "deadLetterQueue": {
          "$ref": "#/definitions/identifier"          
        },
        "maxReceiveCount": {
          "type": "integer",
          "description": "The SQS queue to use as a dead letter queue (DLQ)."
        }
      },
      "required": [
        "deadLetterQueue"
      ]
    },
    "identifier": {
      "type": "object",
      "description": "The SQS queue to use as a dead letter queue (DLQ).",
      "properties": {
        "arn": {
          "type": "string",
          "description": "The target is an ARN. For example, for SQS, the identifier may be an ARN, which will be of the form: arn:aws:sqs:{region}:{account-id}:{queueName}"
        },
        "name": {
          "type": "string",
          "description": "The endpoint is identified by a name, which corresponds to an identifying field called 'name' of a binding for that protocol on this publish Operation Object. For example, if the protocol is 'sqs' then the name refers to the name field sqs binding."
        }
      }
    },
    "policy": {
      "type": "object",
      "description": "The security policy for the SQS Queue",
      "properties": {
        "statements": {
          "type": "array",
          "description": "An array of statement objects, each of which controls a permission for this topic.",
          "items": {
            "$ref": "#/definitions/statement"
          }
        }
      },
      "required": [
        "statements"
      ]
    },
    "statement": {
      "type": "object",
      "properties": {
        "effect": {
          "type": "string",
          "enum": [
            "Allow",
            "Deny"
          ]
        },
        "principal": {
          "description": "The AWS account or resource ARN that this statement applies to.",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        "action": {
          "description": "The SNS permission being allowed or denied e.g. sns:Publish",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        }
      },
      "required": [
        "effect",
        "principal",
        "action"
      ]
    }
  }
}
